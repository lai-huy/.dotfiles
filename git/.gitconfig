[user]
	name = Huy Lai
	email = 98334390+lai-huy@users.noreply.github.com
	signingkey = /home/pineapple/.ssh/id_ed25519.pub

[pager]
    diff = diff-so-fancy | less --RAW-CONTROL-CHARS
    show = diff-so-fancy | less --RAW-CONTROL-CHARS
    log = diff-so-fancy | less --RAW-CONTROL-CHARS
    reflog = diff-so-fancy | less --RAW-CONTROL-CHARS

[push]
    default = simple

[pull]
    ff = only
    rebase = true

[fetch]
    prune = true

[branch]
    autosetuprebase = always

[merge]
    ignore-space-change = true
    tool = meld
    conflictstyle = diff3

[rerere]
    enabled = true

[rebase]
    autoStash = true
    autoSquash = true

[status]
    showUntrackedFiles = all

[diff]
    algorithm = histogram 
    indentHeuristic = true
    wordRegex = [A-Z][a-z]*|[a-z]+|[^[:space:]]
    colorMoved = zebra

[diff "scala"]
    xfuncname = ^\\s*(.*(def|object|class|trait) .*)$

[diff "markdown"]
    xfuncname = "^#+.*$"

[commit]
    verbose = true
	gpgsign = true

[tag]
	gpgsign = true

[core]
    editor = nvim

[init]
	defaultBranch = main

[credential]
	helper = store --file ~/.git-credentials

[alias]
    st = status
    co = checkout
    com = checkout master
    cob = checkout -b
    cot = "!TEMP=$(mktemp -d); f() { git worktree prune && git worktree add $TEMP $1 && zsh -c \"cd $TEMP; zsh\";}; f" # checkout branch in temporary directory
    ci = commit
    amend = commit --amend
    unstage = reset HEAD
    prev = reset HEAD~1
    fixup = !zsh -ic 'git commit --fixup $(git-select-commit)'
    ignore = "!cd -- ${GIT_PREFIX:-.}; f() { echo \"$1\" >> .gitignore; }; f"
    cl = clone
    br = branch
    brr = branch -r
    lg = log --pretty=format:'%Cred%h %C(reset)%C(dim)%ad%x08%x08%x08%x08%x08%x08%x08%x08%x08%Creset%C(blue) %an %Creset%s%C(yellow)%d %Cgreen(%ar)%Creset' --abbrev-commit --date=iso --graph --date-order
    lga = log --branches --remotes --tags --full-history --graph --pretty=format:'%C(yellow)%d %Cred%h %C(reset)%C(blue)%an %C(reset)%s %Cgreen(%ar)%C(reset)' 
    df = diff --color-words='[A-Z][a-z]*|[a-z]+|[^[:space:]]' --irreversible-delete --find-copies-harder --find-copies --ignore-space-at-eol --ignore-space-change --ignore-all-space  --ignore-blank-lines --inter-hunk-context=2
    dfs = df --staged
    sdf = show --color-words
    p = push
    pf = push --force-with-lease
    peng = push --force-with-lease
    wupp = push
    up = pull --rebase --autostash 
    u = up
    f = fetch
    fa = fetch --all
    po = !git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\" 
    dbr = "!f() { git branch -D $1; git push origin :$1;}; f"
    dtag = "!f() { git tag -d $1; git push origin :$1;}; f"
    wip = "!git add -A; git commit --message=\"WIP: `git diff --name-only --staged | xargs -L 1 basename | paste -sd \",\"`\""
    wipbr = "!f() { git cob $1; git wip; git po;}; f"
    pr = "!f() { ! git diff --staged --quiet && git cob \"$1\" && git ci && gh pr create --fill;}; f"
    prm = "!f() { ! git diff --staged --quiet && git cob \"$1\" && git ci && gh pr create --fill -l=\"ready-to-merge-squash\" ;}; f"
    prd = "!f() { ! git diff --staged --quiet && git cob \"$1\" && git ci && gh pr create --fill --draft;}; f"
    prune-local = "!git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == \"[gone]\" {sub(\"refs/heads/\", \"\", $1); print $1}'); do (echo -n \"DELETE $branch? [y/N]: \"; read -r answer; [[ \"$answer\" =~ ^(y|Y) ]]) && git branch -D $branch; done"
    prune-local-force = "!git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == \"[gone]\" {sub(\"refs/heads/\", \"\", $1); print $1}'); do git branch -D $branch; done"

    ss = stash save --include-untracked
    sski = stash save --include-untracked --keep-index
    sp = stash pop

    rb = rebase
    rbm = rebase master
    rbom = rebase origin/master
    rbod = rebase origin/develop
    rba = rebase --abort
    rbs = rebase --skip
    rbc = rebase --continue
    rbi = rebase -i
    rbim = rebase -i master
    rbiom = rebase -i origin/master

    m = merge
    ma = merge --abort
    ms = merge --skip
    mc = merge --continue

    cp = cherry-pick
    cpa = cherry-pick --abort
    cps = cherry-pick --skip
    cpc = cherry-pick --continue

    h = help

[color]
    branch = auto
    diff = auto
    status = auto
    ui = true

[color "diff"]
    old = red bold
    new = green bold
    meta = yellow
    frag = magenta bold
    commit = yellow bold
    whitespace = red reverse

[color "status"]
    added = green
    changed = yellow
    untracked = blue

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22
[gpg]
	format = ssh
